/* Layouts: Mobile is 375px and Desktop is 1440px */

@font-face {
    font-family: "Roboto";
    src: local("Roboto Regular"), /* The browser will first look local before downloading */
	 url("./assets/fonts/Roboto-Regular.ttf");
    font-weight: 400;
}

@font-face {
    font-family: "Roboto";
    src: local("Roboto Bold"), /* The browser will first look local before downloading */
	 url("./assets/fonts/Roboto-Bold.ttf");
    font-weight: 700;
}

/* Custom Properties */

:root {
    /* Primary colors */
    --clr-accent-lightorange: hsl(5, 100%, 95%);
    --clr-accent-orange: hsl(4, 100%, 67%);
    --clr-accent-darkorange: hsl(14, 100%, 61%);
    --clr-accent-pink: hsl(346, 100%, 67%);

    /* Neutral colors */
    --clr-neutral-00: hsl(0, 0%, 100%);
    --clr-neutral-10: hsl(0, 0%, 95%);
    --clr-neutral-30: hsl(231, 7%, 80%);
    --clr-neutral-40: hsl(231, 7%, 60%);
    --clr-neutral-70: hsl(235, 18%, 26%);
    --clr-neutral-80: hsl(234, 29%, 20%);

    /* Gradients */
    --gradient-primary: linear-gradient(90deg, var(--clr-accent-pink), var(--clr-accent-orange));

    /* Font sizes
       - Always use rem for font sizes. Pixels can have problem with different dpi screens
       - Base is 16px. To calculate the size divide the size you want for 16
    */
    --fs-small: 0.75rem;  /* 12px */
    --fs-regular: 1.0rem; /* 16px */
    --fs-large: 2.5rem;	  /* 40px */

    /* Font family */
    --ff-base: Roboto, sans-serif;

    /* Font weight */
    --fw-regular: 400;
    --fw-bold: 700;

    /* Box shadow */
    --box-shadow: 0px 15px 20px 15px hsla(4, 100%, 61%, 0.2);
    --border-radius: 0.5rem;
}


/* CSS reset */

*, *::after, *::before {
    box-sizing: border-box;
}

img, picture {
    display: block;
    max-width: 100%;
    height: auto;
    margin-inline: auto;
}

h1, h2, h3, h4, h5, h6, figure, blockquote, dl, dd {
    margin: 0;
}

ul[role="list"], ol[role="list"] {
    list-style: none;
    margin: 0;
    padding: 0;
}

body, html {
    margin: 0;
    padding: 0;
    height: 100%;
}

/* Some elements dont get the font family from body */
input, button {
    font: inherit;
}

/* Custom styles */

body {
    font-family: var(--ff-base);
    font-size: var(--fs-regular);
    font-weight: var(--fw-regular);
    color: var(--clr-neutral-80);
    line-height: 1.5;
    background-color: var(--clr-neutral-70);

    display: flex;
}

.newsletter-cta {
    background-color: var(--clr-neutral-00);
    margin-inline: auto;
}

.newsletter-cta > .content {
    padding: 2rem 1.4rem;

    display: grid;
    gap: 1.5rem;
}

.newsletter-cta > .content > * {
    margin: 0;
}

.newsletter-cta .title {
    font-size: var(--fs-large);
    font-weight: var(--fw-bold);
}

.checkmark-list {
    display: grid;
    gap: 0.7rem;
}

.checkmark-list li {
    display: grid;
    grid-template-columns: 2.5rem auto;
}

.checkmark-list li::before {
    content: url("./assets/images/icon-list.svg");
}

.newsletter-cta .form-group {
    display: grid;
    gap: 0.5rem;
    margin-bottom: 1.4rem;
    grid-template-columns: 1fr 1fr;
}

.newsletter-cta label {
    font-size: var(--fs-small);
    font-weight: var(--fw-bold);
    display: block;
}

.newsletter-cta input {
    grid-column: 1 / -1;
    padding: 1.0em 1.4em;
    border-radius: var(--border-radius);
    border: 1px solid var(--clr-neutral-30);
    font-size: var(--fs-regular);
}

.newsletter-cta input::placeholder {
    color: var(--clr-neutral-40);
}

/* Input is invalid but not focused */
.newsletter-cta input:not(:focus):invalid {
    color: var(--clr-accent-orange);
    border-color: var(--clr-accent-orange);
    background-color: var(--clr-accent-lightorange);
}

.newsletter-cta .error-message {
    font-size: var(--fs-small);
    font-weight: var(--fw-bold);
    color: var(--clr-accent-orange);
    text-align: right;
    grid-row: 1;
    grid-column: 2;
    display: none;
}

/* Display the .error-message when the input is invalid and is not focused */
.newsletter-cta input:not(:focus):invalid + .error-message {
    display: block;
}

.newsletter-cta .button {
    border: 0;
    border-radius: var(--border-radius);
    color: var(--clr-neutral-10);
    background-color: var(--clr-neutral-80);
    font-size: var(--fs-regular);
    font-weight: var(--fw-bold);
    width: 100%;
    padding: 1.2em 0 0.9em;
}

.newsletter-cta .button:hover,
.newsletter-cta .button:focus-visible {
    background: var(--gradient-primary);
    box-shadow: var(--box-shadow);
    outline: 2px solid var(--clr-neutral-80);
}

/* Card has width of 930px at 1440px (desktop) */
@media(min-width: 768px) {
    :root {
	--fs-regular: 0.875rem; /* 14px */
	--max-width-card: 830px;
    }

    .newsletter-cta {
	/* Make it max of xxx but when smaller lets 1rem at sides */
	width: min(var(--max-width-card), 100% - 2rem);
	margin: auto;
	padding: 2rem;
	border-radius: 2rem;

	display: grid;
	gap: 1.4rem;
	align-items: center;
	grid-template-columns: 1fr 0.8fr;
	grid-template-areas: "content image";
    }

    .newsletter-cta picture {
	grid-area: image;
    }

    .newsletter-cta .content {
	grid-area: content;
	padding: 0 2rem;
    }

    .newsletter-cta .title {
	line-height: 1;
    }

    .newsletter-cta .checkmark-list {
	margin-bottom: 1rem;
    }
}

@media(min-width: 1024px) {
    :root {
	--fs-large: 3.5rem; /* 56px */
	--fs-regular: 1rem; /* 16px */
	--max-width-card: 930px;
    }

    .newsletter-cta {
	grid-template-columns: 1fr max-content;
    }
}
